version: "3"

volumes:
  sonify_postgres_data:
  local_redis_data:

services:
  sonify:
    build: ./
    ports:
      - "8000:8000"
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PORT: ${PORT}
      DB_URL: ${DB_URL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_ADDRESS: ${REDIS_ADDRESS}
      GOOGLE_CLIENT_KEY: ${GOOGLE_CLIENT_KEY}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      ACCESS_TOKEN_EXP_MILLIS: ${ACCESS_TOKEN_EXP_MILLIS}
      PUBLIC_DIR: ${PUBLIC_DIR}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      SPOTIFY_REDIRECT_URI: ${SPOTIFY_REDIRECT_URI}
      MAX_UPLOAD_SIZE_BYTES: ${MAX_UPLOAD_SIZE_BYTES}

    depends_on:
      sonifydb:
        condition: service_healthy
      sonifyredis:
        condition: service_healthy
    volumes:
      - /home/toko/dev/sonify/sonifybackendpublic:/app/public

  sonifydb:
    image: postgres:14.5-alpine
    ports:
      - "5435:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - sonify_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  sonifyredis:
    image: redis:7-alpine    
    container_name: sonify_redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - local_redis_data:/data
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5