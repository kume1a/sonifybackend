// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: audio_like.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createAudioLike = `-- name: CreateAudioLike :one
INSERT INTO audio_likes (
  audio_id, 
  user_id
) VALUES ($1, $2) 
RETURNING user_id, audio_id
`

type CreateAudioLikeParams struct {
	AudioID uuid.UUID
	UserID  uuid.UUID
}

func (q *Queries) CreateAudioLike(ctx context.Context, arg CreateAudioLikeParams) (AudioLike, error) {
	row := q.db.QueryRowContext(ctx, createAudioLike, arg.AudioID, arg.UserID)
	var i AudioLike
	err := row.Scan(&i.UserID, &i.AudioID)
	return i, err
}

const deleteAudioLike = `-- name: DeleteAudioLike :exec
DELETE FROM audio_likes 
  WHERE audio_id = $1 AND user_id = $2
`

type DeleteAudioLikeParams struct {
	AudioID uuid.UUID
	UserID  uuid.UUID
}

func (q *Queries) DeleteAudioLike(ctx context.Context, arg DeleteAudioLikeParams) error {
	_, err := q.db.ExecContext(ctx, deleteAudioLike, arg.AudioID, arg.UserID)
	return err
}
