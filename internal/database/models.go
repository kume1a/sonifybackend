// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type AuthProvider string

const (
	AuthProviderEMAIL    AuthProvider = "EMAIL"
	AuthProviderGOOGLE   AuthProvider = "GOOGLE"
	AuthProviderFACEBOOK AuthProvider = "FACEBOOK"
	AuthProviderAPPLE    AuthProvider = "APPLE"
)

func (e *AuthProvider) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AuthProvider(s)
	case string:
		*e = AuthProvider(s)
	default:
		return fmt.Errorf("unsupported scan type for AuthProvider: %T", src)
	}
	return nil
}

type NullAuthProvider struct {
	AuthProvider AuthProvider
	Valid        bool // Valid is true if AuthProvider is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAuthProvider) Scan(value interface{}) error {
	if value == nil {
		ns.AuthProvider, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AuthProvider.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAuthProvider) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AuthProvider), nil
}

type Artist struct {
	ID        uuid.UUID
	Name      string
	ImagePath string
	CreatedAt time.Time
	SpotifyID sql.NullString
	ImageUrl  sql.NullString
}

type ArtistAudio struct {
	ArtistID  uuid.UUID
	AudioID   uuid.UUID
	CreatedAt time.Time
}

type Audio struct {
	ID             uuid.UUID
	Title          sql.NullString
	Author         sql.NullString
	DurationMs     sql.NullInt32
	Path           sql.NullString
	CreatedAt      time.Time
	SizeBytes      sql.NullInt64
	YoutubeVideoID sql.NullString
	ThumbnailPath  sql.NullString
	SpotifyID      sql.NullString
	ThumbnailUrl   sql.NullString
}

type Playlist struct {
	ID            uuid.UUID
	Name          string
	ThumbnailPath sql.NullString
	CreatedAt     time.Time
	SpotifyID     sql.NullString
	ThumbnailUrl  sql.NullString
}

type PlaylistAudio struct {
	PlaylistID uuid.UUID
	AudioID    uuid.UUID
	CreatedAt  time.Time
}

type User struct {
	ID           uuid.UUID
	CreatedAt    time.Time
	Name         sql.NullString
	Email        sql.NullString
	AuthProvider AuthProvider
	PasswordHash sql.NullString
}

type UserAudio struct {
	UserID    uuid.UUID
	AudioID   uuid.UUID
	CreatedAt time.Time
}

type UserPlaylist struct {
	UserID     uuid.UUID
	PlaylistID uuid.UUID
	CreatedAt  time.Time
}

type UserSyncDatum struct {
	ID                  uuid.UUID
	UserID              uuid.UUID
	SpotifyLastSyncedAt sql.NullTime
}
